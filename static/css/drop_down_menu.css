/* Dropdown button styles */
.dropdown-toggle {
  background-color: #3498db;
  color: #fff;
  border: none;
  padding: 10px 20px;
  cursor: pointer;
  border-radius: 4px;
  font-size: 16px;
}

/* Dropdown menu container */
.dropdown {
  position: relative;
  display: inline-block;
  margin: 10px;
}

/* Dropdown menu styles */
.dropdown-menu {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  background-color: #fff;
  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
  border: 1px solid #ddd;
  border-radius: 4px;
  z-index: 1;
  width: 150px; /* Adjust the width as needed */
}

/* Dropdown menu items */
.dropdown-menu ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}


/* Links in the dropdown menu */
.dropdown-menu a {
  
  color: #333;
  font-size: 14px;
  display: block;
  text-decoration: none;
  padding: 10px;
}

/* Hover effect for links */
.dropdown-menu li:hover {
  background-color: #6db1fa;
  color:#fff;
  cursor: pointer;
}
/* This code means When pointer hover at 
container-dropdown on child <li> it will target <a> 
which is a sub of <li> or wrap in <li>. 
since both element has it's own property we need to individually target it
because if we just select <a> on defining hover it will affect the unselected <a>
hover element even if that it not being hovered because it generalize the css style applyication on tag <a>*/
.dropdown-menu li:hover a{
  color: white;
}
.disabled-link a{
  background-color: rgb(212, 210, 210);
  pointer-events: none;
  color: white;
  cursor: pointer;
}
li.disabled-link{
  
  background-color: rgb(212, 210, 210);
  pointer-events: none;
  color: white;
  cursor: pointer;
}

li.disabled-link:hover{
  pointer-events: none;
  background-color: rgb(212, 210, 210);
  color: grey;
  cursor: default;
}